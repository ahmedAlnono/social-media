// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name    String?
  username String?
  email   String?    @unique
  hash    String
  bio     String?
  image   String?
  coverimage String?
  profileimage String?
  folowing String[] @db.ObjectId
  hasNotification Boolean?
  posts Post[]
  comments Comment[]
  notifications Notification[]
}

model Post {
    id     String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    body String
    userId String @db.ObjectId
    likedIds String[] @db.ObjectId
    user User @relation(fields: [userId] , references: [id], onDelete:Cascade)
    comments Comment[]
}

model Comment {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body String
  userId String @db.ObjectId
  postId String @db.ObjectId
  user User @relation(fields: [userId] , references: [id], onDelete:Cascade)
  post Post @relation(fields: [postId] , references: [id], onDelete:Cascade)
}
model Notification {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  body String
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete:Cascade)
}